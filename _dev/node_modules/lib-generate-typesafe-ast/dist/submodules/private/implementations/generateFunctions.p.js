"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.$$ = void 0;
const pl = __importStar(require("pareto-core-lib"));
const $$ = ($d) => {
    return ($, $i) => {
        //const grammar = $.grammar
        pl.cc($i, ($w) => {
            $w.line(`import * as pt from 'pareto-core-types'`);
            $w.line(``);
            $w.line(`import * as uast from "glo-typescript-untyped-ast"`);
            $w.line(``);
            $w.nestedLine(($w) => {
                $w.snippet(`export type XParse = (`);
                $w.indent(($w) => {
                    $w.line(`$: uast.T.UntypedNode,`);
                    $w.nestedLine(($w) => {
                        $w.snippet(`$i: {`);
                        $w.indent(($w) => {
                            $w.line(`callback: ($: api.TRoot) => void,`);
                            $w.line(`reportUnexpectedToken: ($: { path: string, token: uast.T.UntypedNode, expected: null | string }) => void,`);
                            $w.line(`reportMissingToken: ($: { parentDetails: uast.T.Details, path: string, kindNameOptions: string, }) => void,`);
                        });
                        $w.snippet(`},`);
                    });
                    $w.nestedLine(($w) => {
                        $w.snippet(`$d: {`);
                        $w.indent(($w) => {
                            $w.line(`doUntil: <T>(stack: pm.Stack<T>, callback: ($: T) => boolean) => void,`);
                            $w.line(`lookAhead: <T>(stack: pm.Stack<T>, exists: ($: T) => void, notExists: () => void) => void,`);
                            $w.line(`stringsAreEqual: (a: string, b: string) => boolean,`);
                        });
                        $w.snippet(`},`);
                    });
                });
                $w.snippet(`) => void`);
            });
            $w.line(``);
            $w.nestedLine(($w) => {
                $w.snippet(`export type XVisit = (`);
                $w.indent(($w) => {
                    $w.line(`$: api.TNroot,`);
                    $w.nestedLine(($w) => {
                        $w.snippet(`$i: {`);
                        $w.indent(($w) => {
                            $w.line(`visitor: api.IVisitor,`);
                        });
                        $w.snippet(`}`);
                    });
                });
                $w.snippet(`) => void`);
            });
            $w.line(``);
            $w.nestedLine(($w) => {
                $w.snippet(`export type XCreateDefaultVisistor = (`);
                $w.indent(($w) => {
                    $w.nestedLine(($w) => {
                        $w.snippet(`$i: {`);
                        $w.indent(($w) => {
                            $w.line(`log: ($: string) => void`);
                        });
                        $w.snippet(`}`);
                    });
                });
                $w.snippet(`) => api.IVisitor`);
            });
        });
    };
};
exports.$$ = $$;
