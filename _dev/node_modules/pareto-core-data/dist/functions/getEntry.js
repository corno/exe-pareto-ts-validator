"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.unsafeGetEntry = exports.getEntry = void 0;
function getEntry(dictionary, key, exists, notExists) {
    let entry = undefined;
    dictionary.map(($, thisKey) => {
        if (thisKey === key) {
            entry = $;
        }
    });
    if (entry !== undefined) {
        return exists(entry);
    }
    else {
        return notExists();
    }
}
exports.getEntry = getEntry;
function unsafeGetEntry(dictionary, key) {
    const found = [];
    let entry = undefined;
    dictionary.map(($, thisKey) => {
        found.push(key);
        if (thisKey === key) {
            entry = $;
        }
    });
    if (entry === undefined) {
        throw new Error(`CORE: missing entry '${key}', (found: ${(found.length > 20) ? "more than 20" : found.map($ => `'${$}'`).join(', ')})`);
    }
    else {
        return entry;
    }
}
exports.unsafeGetEntry = unsafeGetEntry;
