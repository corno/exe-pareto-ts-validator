import * as pt from "pareto-core-types";
import { Path } from "../types/Path";
import { TReadDirError } from "../types/ReadDirError";
import { CreateAyncValue } from "./CreateAsyncValue";
import { FSResult, TAnnotatedFSError } from "./FSResult";
export declare type DirNodeData = {
    readonly path: string;
    readonly type: ["directory", {}] | ["file", {}] | ["unknown", {}];
};
export declare type ReadDirectory_Data = {
    path: Path;
};
export declare type ReadDirectory_Success = pt.Dictionary<DirNodeData>;
export declare type AnnotatedReadDirectoryError = TAnnotatedFSError<TReadDirError>;
export declare type ReadDirectory_Result = FSResult<AnnotatedReadDirectoryError, ReadDirectory_Success>;
export declare type ReadDirectory = CreateAyncValue<ReadDirectory_Data, ReadDirectory_Result>;
