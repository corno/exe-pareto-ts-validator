import * as pt from "pareto-core-types";
import * as fp from "lib-fountain-pen";
import { TGrammar } from "./types/types";
export declare type Path = pt.Nested<string>;
export declare type GenerateImplementationFile_Data = {
    grammar: TGrammar;
    pathToInterface: string;
};
export declare type GenerateImplementation = ($: {
    fpSettings: fp.TConfiguration;
    generation: GenerateImplementationFile_Data;
}, $d: {
    createWriteStream: ($: {
        path: Path;
    }, callback: ($: fp.IStreamConsumer) => void) => void;
}) => void;
export declare type GenerateInterfaceFile_Data = {
    grammar: TGrammar;
};
export declare type GenerateInterface = ($: {
    fpSettings: fp.TConfiguration;
    generation: GenerateInterfaceFile_Data;
}, $d: {
    createWriteStream: ($: {
        path: Path;
    }, callback: ($: fp.IStreamConsumer) => void) => void;
}) => void;
