"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.writeFileImp = void 0;
const fs = __importStar(require("fs"));
const joinPath_1 = require("./joinPath");
function writeFileImp(path, data, cb) {
    const joinedPath = (0, joinPath_1.joinPath)(path);
    fs.writeFile(joinedPath, data, {
        encoding: "utf-8",
    }, (err) => {
        if (err !== null) {
            const errCode = err.code;
            const errMessage = err.message;
            function createError() {
                switch (errCode) {
                    case "ENOENT":
                        return ["no entity", {}];
                    case "EISDIR":
                        return ["is directory", {}];
                    default: {
                        console.log(`CORE: DEV TODO: ADD THIS OPTION TO pareto-filesystem WRITEFILE: ${errMessage}`);
                        return ["unknown", { message: errMessage }];
                    }
                }
            }
            cb(["error", {
                    error: createError(),
                    path: joinedPath
                }]);
        }
        else {
            cb(["success", {}]);
        }
    });
}
exports.writeFileImp = writeFileImp;
